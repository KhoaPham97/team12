@model WebApplication.Models.Bucket

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content">
        <div class="row">

            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->

                <div class="box box-primary">
                    <h2>
                        Create Bucket
                    </h2>
                    <div class="box-header with-border">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Plan</label>

                                @Html.DropDownList("PlanID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PlanID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Title</label>

                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Status</label>

                                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Start Date</label>

                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar" onclick="StartDate()"></i>
                                    </div>
                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control " } })
                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Due Date</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar" onclick="DueDate()"></i>
                                    </div>
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control " } })
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Assignee</label>

                                @Html.DropDownList("Assignee", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Assignee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Reporter</label>

                                @Html.DropDownList("Reporter", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Reporter, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="box-body pad">
                            <label>Description</label>
                            <form>
                                <textarea class="textarea" placeholder="Place some text here"
                                          style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;" id="Description" name="Description"></textarea>
                            </form>
                        </div>



                        <div class="form-group" style="float:right">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                 
                        </div>
                    </div>
            </div>

        </div>



        <!-- /.row -->
    </section>
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        function StartDate() {
            $("#StartDate").focus();
        }
        function DueDate() {
            $("#DueDate").focus();
        }
        $(function () {
            $("#StartDate").datepicker({
                numberOfMonths: 2,
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#DueDate").datepicker("option", "minDate", dt);
                }
            });
            $("#DueDate").datepicker({
                numberOfMonths: 2,
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() - 1);
                    $("#StartDate").datepicker("option", "maxDate", dt);
                }
            });
        });
    </script>
}
